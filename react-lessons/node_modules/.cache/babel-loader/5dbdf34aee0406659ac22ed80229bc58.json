{"ast":null,"code":"var _jsxFileName = \"/home/ivan/javascript-lessons/react-lessons/src/Car/Car.js\";\nimport React, { Component } from 'react';\nimport Radium from 'radium';\nimport './Car.css'; // теперь компонент Car наследуется от реакт компонента, теперь доступен локальный стейт(хз что это) и разные жизненные циклы\n\nclass Car extends React.Component {\n  render() {\n    const inputClasses = ['input'];\n\n    if (this.props.name !== '') {\n      inputClasses.push('green');\n    } else {\n      inputClasses.push('red');\n    }\n\n    if (this.props.name.length > 4) {\n      inputClasses.push('bold');\n    }\n\n    const style = {\n      border: '3px solid #ccc',\n      boxShadow: '0 4px 5px 0 rgba(0,0,0, .14)',\n      ':hover': {\n        //псевдоселектор с которым при наведении мышки на обьект он будет выделятся\n        border: '2px solid #aaa',\n        boxShadow: '0 4px 15px 0 rgba(0,0,0, .25)',\n        cursor: 'pointer'\n      }\n    };\n    return React.createElement(\"div\", {\n      className: \"Car\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Car name: \", this.props.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Year: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.year)), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.props.onChangeName,\n      value: this.props.name,\n      className: inputClasses.join(' ') //данный параметр не понмает массивы по этому  мы передаём массив и превращяем его в строку через .join который соединяет каким-то символом все элементы в массиве\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.props.onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Delete!\"));\n  }\n\n}\n\nexport default Radium(Car);","map":{"version":3,"sources":["/home/ivan/javascript-lessons/react-lessons/src/Car/Car.js"],"names":["React","Component","Radium","Car","render","inputClasses","props","name","push","length","style","border","boxShadow","cursor","year","onChangeName","join","onDelete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACC,SAAxB,CAAkC;AAC9BG,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,GAAG,CAAC,OAAD,CAArB;;AAEA,QAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,EAAxB,EAA4B;AACxBF,MAAAA,YAAY,CAACG,IAAb,CAAkB,OAAlB;AACH,KAFD,MAEO;AACHH,MAAAA,YAAY,CAACG,IAAb,CAAkB,KAAlB;AACH;;AAED,QAAI,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,MAAhB,GAAyB,CAA7B,EAAgC;AAC5BJ,MAAAA,YAAY,CAACG,IAAb,CAAkB,MAAlB;AACH;;AAED,UAAME,KAAK,GAAG;AACVC,MAAAA,MAAM,EAAE,gBADE;AAEVC,MAAAA,SAAS,EAAE,8BAFD;AAGV,gBAAU;AAAE;AACRD,QAAAA,MAAM,EAAE,gBADF;AAENC,QAAAA,SAAS,EAAE,+BAFL;AAGNC,QAAAA,MAAM,EAAE;AAHF;AAHA,KAAd;AAUA,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAEH,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKJ,KAAL,CAAWC,IAA1B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKD,KAAL,CAAWQ,IAApB,CAAT,CAFJ,EAGI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,YAFzB;AAGI,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,IAHtB;AAII,MAAA,SAAS,EAAEF,YAAY,CAACW,IAAb,CAAkB,GAAlB,CAJf,CAIuC;AAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EASI;AAAQ,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CADJ;AAaH;;AArC6B;;AA0ClC,eAAef,MAAM,CAACC,GAAD,CAArB","sourcesContent":["import React, { Component } from 'react';\nimport Radium from 'radium'\nimport './Car.css'\n\n// теперь компонент Car наследуется от реакт компонента, теперь доступен локальный стейт(хз что это) и разные жизненные циклы\nclass Car extends React.Component {\n    render() {\n        const inputClasses = ['input']\n\n        if (this.props.name !== '') {\n            inputClasses.push('green')\n        } else {\n            inputClasses.push('red')\n        }\n\n        if (this.props.name.length > 4) {\n            inputClasses.push('bold')\n        }\n\n        const style = {\n            border: '3px solid #ccc',\n            boxShadow: '0 4px 5px 0 rgba(0,0,0, .14)',\n            ':hover': { //псевдоселектор с которым при наведении мышки на обьект он будет выделятся\n                border: '2px solid #aaa',\n                boxShadow: '0 4px 15px 0 rgba(0,0,0, .25)',\n                cursor: 'pointer'\n            }\n        }\n\n        return (\n            <div className='Car' style={style}>\n                <h3>Car name: {this.props.name}</h3>\n                <p>Year: <strong>{this.props.year}</strong></p>\n                <input\n                    type='text'\n                    onChange={this.props.onChangeName}\n                    value={this.props.name}\n                    className={inputClasses.join(' ')} //данный параметр не понмает массивы по этому  мы передаём массив и превращяем его в строку через .join который соединяет каким-то символом все элементы в массиве\n                />\n                <button onClick={this.props.onDelete}>Delete!</button>\n            </div>\n        )\n    }\n}\n\n\n\nexport default Radium(Car)"]},"metadata":{},"sourceType":"module"}