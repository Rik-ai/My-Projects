{"ast":null,"code":"var _jsxFileName = \"/home/ivan/javascript-lessons/react-lessons/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Car from './Car/Car';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cars: [{\n        name: 'Ford',\n        year: 2018\n      }, {\n        name: 'Audi',\n        year: 2016\n      }, {\n        name: 'Mazda',\n        year: 2010\n      }],\n      pageTitle: 'React components',\n      showCars: false\n    };\n\n    this.toggleCarsHandler = () => {\n      this.setState({\n        showCars: !this.state.showCars\n      });\n    };\n  }\n\n  onChangeName(name, index) {\n    const car = this.state.cars[index];\n    car.name = name;\n    const cars = [...this.state.cars]; //получим новый склонированный массив т.к. когда мы меняем какое-то состояние мы должны создавать клоны\n\n    cars[index] = car;\n    this.setState({\n      cars\n    });\n  }\n\n  deleteHandler(index) {\n    const cars = this.state.cars.concat(); //получим новый склонированный массив т.к. когда мы меняем какое-то состояние мы должны создавать клоны\n\n    cars.splice(index, 1); //splice метод для удаления элемента, 1 значение индех элемента 2е значение количество удаляемых элементов\n\n    this.setState({\n      cars\n    });\n  }\n\n  render() {\n    const divStyle = {\n      textAlign: 'center'\n    };\n    let cars = null;\n\n    if (this.state.showCars) {\n      cars = this.state.cars.map((car, index) => {\n        return React.createElement(Car, {\n          key: index,\n          name: car.name,\n          year: car.year,\n          onDelete: this.deleteHandler.bind(this, index),\n          onChangeName: e => this.onChangeName(e.target.value, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"button\", {\n      onClick: this.toggleCarsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Toggle cars\"), React.createElement(\"div\", {\n      style: {\n        width: 400,\n        margin: 'auto',\n        paddingTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, cars));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ivan/javascript-lessons/react-lessons/src/App.js"],"names":["React","Component","Car","App","state","cars","name","year","pageTitle","showCars","toggleCarsHandler","setState","onChangeName","index","car","deleteHandler","concat","splice","render","divStyle","textAlign","map","bind","e","target","value","props","title","width","margin","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Car from './Car/Car'\n\nclass App extends Component {\n\n  state = {\n    cars: [\n      { name: 'Ford', year: 2018 },\n      { name: 'Audi', year: 2016 },\n      { name: 'Mazda', year: 2010 }\n    ],\n    pageTitle: 'React components',\n    showCars: false\n  }\n\n  toggleCarsHandler = () => {\n    this.setState({\n      showCars: !this.state.showCars\n    })\n  }\n\n  onChangeName(name, index) {\n    const car = this.state.cars[index]\n    car.name = name\n    const cars = [...this.state.cars] //получим новый склонированный массив т.к. когда мы меняем какое-то состояние мы должны создавать клоны\n    cars[index] = car\n    this.setState({ cars })\n  }\n\n  deleteHandler(index) {\n    const cars = this.state.cars.concat() //получим новый склонированный массив т.к. когда мы меняем какое-то состояние мы должны создавать клоны\n    cars.splice(index, 1) //splice метод для удаления элемента, 1 значение индех элемента 2е значение количество удаляемых элементов\n\n\n    this.setState({ cars })\n  }\n\n\n\n\n\n  render() {\n    const divStyle = {\n      textAlign: 'center'\n    }\n\n    let cars = null\n\n    if (this.state.showCars) {\n      cars = this.state.cars.map((car, index) => {\n        return (\n          <Car\n            key={index}\n            name={car.name}\n            year={car.year}\n            onDelete={this.deleteHandler.bind(this, index)}\n            onChangeName={e => this.onChangeName(e.target.value, index)}\n          />\n        )\n      })\n    }\n\n    return (\n      <div style={divStyle}>\n        {/* <h1>{this.state.pageTitle}</h1> */}\n        <h1>{this.props.title}</h1>\n\n        <button\n          onClick={this.toggleCarsHandler}\n        >Toggle cars</button>\n        <div style={{\n          width: 400,\n          margin: 'auto',\n          paddingTop: '20px'\n        }}>\n          {cars}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}