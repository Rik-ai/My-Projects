{"ast":null,"code":"var _jsxFileName = \"/home/ivan/javascript-lessons/react-lessons/src/Counter/Counter.js\";\nimport React, { Component } from 'react';\nexport default class Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n\n    this.addCounter = () => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n  }\n\n  render() {\n    // return (\n    //     <div>\n    //         <h2>Counter{this.state.counter}</h2>\n    //         <button onClick={this.addCounter}>+</button>\n    //         <button onClick={() => this.setState({ counter: this.state.counter - 1 })}>-</button>\n    //     </div>\n    // )\n    //то же самое что и выше просто без дива и выводим как массив, но необходимо для каждого элемента создавать свой уникальный ключ\n    return [React.createElement(\"h2\", {\n      key: '1',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Counter\", this.state.counter), React.createElement(\"button\", {\n      key: '2',\n      onClick: this.addCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      key: '3',\n      onClick: () => this.setState({\n        counter: this.state.counter - 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"-\")];\n  }\n\n}","map":{"version":3,"sources":["/home/ivan/javascript-lessons/react-lessons/src/Counter/Counter.js"],"names":["React","Component","Counter","state","counter","addCounter","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC3CE,KAD2C,GACnC;AACJC,MAAAA,OAAO,EAAE;AADL,KADmC;;AAAA,SAK3CC,UAL2C,GAK9B,MAAM;AACf,WAAKC,QAAL,CAAc;AACVF,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AADpB,OAAd;AAGH,KAT0C;AAAA;;AAY3CG,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,WAAO,CACH;AAAI,MAAA,GAAG,EAAE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsB,KAAKJ,KAAL,CAAWC,OAAjC,CADG,EAEH;AAAQ,MAAA,GAAG,EAAE,GAAb;AAAkB,MAAA,OAAO,EAAE,KAAKC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFG,EAGH;AAAQ,MAAA,GAAG,EAAE,GAAb;AAAkB,MAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,OAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHG,CAAP;AAMH;;AA5B0C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Counter extends Component {\n    state = {\n        counter: 0\n    }\n    //оживляем кнопки\n    addCounter = () => {\n        this.setState({\n            counter: this.state.counter + 1\n        })\n    }\n\n\n    render() {\n        // return (\n        //     <div>\n        //         <h2>Counter{this.state.counter}</h2>\n        //         <button onClick={this.addCounter}>+</button>\n        //         <button onClick={() => this.setState({ counter: this.state.counter - 1 })}>-</button>\n        //     </div>\n        // )\n\n        //то же самое что и выше просто без дива и выводим как массив, но необходимо для каждого элемента создавать свой уникальный ключ\n        return [\n            <h2 key={'1'}>Counter{this.state.counter}</h2>,\n            <button key={'2'} onClick={this.addCounter}>+</button>,\n            <button key={'3'} onClick={() => this.setState({ counter: this.state.counter - 1 })}>-</button>\n\n        ]\n    }\n}"]},"metadata":{},"sourceType":"module"}