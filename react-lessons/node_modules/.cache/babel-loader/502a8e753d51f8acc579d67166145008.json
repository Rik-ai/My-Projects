{"ast":null,"code":"var _jsxFileName = \"/home/ivan/javascript-lessons/react-lessons/src/Car/Car.js\";\nimport React, { Component } from 'react';\nimport './Car.css';\nimport withClass from '../hoc/withClass'; // теперь компонент Car наследуется от реакт компонента, теперь доступен локальный стейт(хз что это) и разные жизненные циклы\n\nclass Car extends React.Component {\n  render() {\n    console.log('Car render');\n    const inputClasses = ['input'];\n\n    if (this.props.name !== '') {\n      inputClasses.push('green');\n    } else {\n      inputClasses.push('red');\n    }\n\n    if (this.props.name.length > 4) {\n      inputClasses.push('bold');\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"\\u0421ar name: \", this.props.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Year: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.year)), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.props.onChangeName,\n      value: this.props.name,\n      className: inputClasses.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.props.onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Delete\"));\n  }\n\n}\n\nexport default withClass(Car, classes.Car);","map":{"version":3,"sources":["/home/ivan/javascript-lessons/react-lessons/src/Car/Car.js"],"names":["React","Component","withClass","Car","render","console","log","inputClasses","props","name","push","length","year","onChangeName","join","onDelete","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAEA;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACC,SAAxB,CAAkC;AAG9BG,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,UAAMC,YAAY,GAAG,CAAC,OAAD,CAArB;;AAEA,QAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,EAAxB,EAA4B;AACxBF,MAAAA,YAAY,CAACG,IAAb,CAAkB,OAAlB;AACH,KAFD,MAEO;AACHH,MAAAA,YAAY,CAACG,IAAb,CAAkB,KAAlB;AACH;;AAED,QAAI,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,MAAhB,GAAyB,CAA7B,EAAgC;AAC5BJ,MAAAA,YAAY,CAACG,IAAb,CAAkB,MAAlB;AACH;;AAED,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,KAAKF,KAAL,CAAWC,IAA1B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKD,KAAL,CAAWI,IAApB,CAAT,CAFJ,EAGI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,YAFzB;AAGI,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAHtB;AAII,MAAA,SAAS,EAAEF,YAAY,CAACO,IAAb,CAAkB,GAAlB,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EASI;AAAQ,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,CADJ;AAaH;;AA/B6B;;AAqClC,eAAeb,SAAS,CAACC,GAAD,EAAMa,OAAO,CAACb,GAAd,CAAxB","sourcesContent":["import React, { Component } from 'react';\nimport './Car.css'\nimport withClass from '../hoc/withClass'\n\n// теперь компонент Car наследуется от реакт компонента, теперь доступен локальный стейт(хз что это) и разные жизненные циклы\nclass Car extends React.Component {\n\n\n    render() {\n        console.log('Car render')\n\n        const inputClasses = ['input']\n\n        if (this.props.name !== '') {\n            inputClasses.push('green')\n        } else {\n            inputClasses.push('red')\n        }\n\n        if (this.props.name.length > 4) {\n            inputClasses.push('bold')\n        }\n\n        return (\n            <React.Fragment>\n                <h3>Сar name: {this.props.name}</h3>\n                <p>Year: <strong>{this.props.year}</strong></p>\n                <input\n                    type=\"text\"\n                    onChange={this.props.onChangeName}\n                    value={this.props.name}\n                    className={inputClasses.join(' ')}\n                />\n                <button onClick={this.props.onDelete}>Delete</button>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\n\nexport default withClass(Car, classes.Car)"]},"metadata":{},"sourceType":"module"}